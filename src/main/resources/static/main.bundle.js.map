{"version":3,"sources":["C:/Kanban-Dashboard/src async","C:/Kanban-Dashboard/src/app/app.component.css","C:/Kanban-Dashboard/src/app/app.component.html","C:/Kanban-Dashboard/src/app/app.component.ts","C:/Kanban-Dashboard/src/app/app.module.ts","C:/Kanban-Dashboard/src/app/defectlist.service.ts","C:/Kanban-Dashboard/src/app/plan/plan.component.css","C:/Kanban-Dashboard/src/app/plan/plan.component.html","C:/Kanban-Dashboard/src/app/plan/plan.component.ts","C:/Kanban-Dashboard/src/app/status/status.component.css","C:/Kanban-Dashboard/src/app/status/status.component.html","C:/Kanban-Dashboard/src/app/status/status.component.ts","C:/Kanban-Dashboard/src/environments/environment.ts","C:/Kanban-Dashboard/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Kanban-Dashboard/src async\n// module id = ../../../../../src async recursive\n// module chunks = 2","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card{\\r\\n    width: 9rem;\\r\\n}\\r\\n.card-body,.panel-default{\\r\\n    padding: 5px;\\r\\n}\\r\\n.yellowgreen{\\r\\n    background-color: yellowgreen !important;\\r\\n}\\r\\n.skyblue{\\r\\n    background-color: skyblue !important;\\r\\n}\\r\\n.tan{\\r\\n    background-color: tan !important;\\r\\n}\\r\\n.darkkhaki{\\r\\n    background-color: darkkhaki !important;\\r\\n}\\r\\n\\r\\ntable.table-bordered{\\r\\n    border:1px solid #48BF94;\\r\\n    margin-top:20px;\\r\\n  }\\r\\ntable.table-bordered > thead > tr > th{\\r\\n    border:1px solid #48BF94;\\r\\n}\\r\\ntable.table-bordered > tbody >tr > th {\\r\\n    border:1px solid #48BF94;\\r\\n}\\r\\ntable.table-bordered > tbody >tr > td {\\r\\n    border:1px solid #48BF94;\\r\\n}\\r\\n\\r\\n.freezeBtn{\\r\\n    margin-top:10px;\\r\\n    font-size: 14px;\\r\\n    font-weight: 900;\\r\\n}\\r\\n\\r\\n.recently-closed{\\r\\n    font-weight:bold;\\r\\n    margin-bottom: 5px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.demo-tab-group {\\r\\n    border: 1px solid #e8e8e8;\\r\\n  }\\r\\n  \\r\\n  .demo-tab-content {\\r\\n    padding: 16px;\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n  .mat-tab-label {\\r\\n   \\r\\n    padding: 5px;\\r\\n    background-color: transparent;\\r\\n  /*  color: #4D1B89; */\\r\\n    font-weight: 700;\\r\\n}\\r\\n\\r\\n/* Styles for the active tab label */\\r\\n.mat-tab-label.mat-tab-label-active {\\r\\n    \\r\\n    padding: 5px;\\r\\n    background-color: transparent;\\r\\n    color: #2A3185;\\r\\n    font-weight: 700;\\r\\n}\\r\\n\\r\\n.borderless td, .borderless th {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n.navTabs{\\r\\n    color: black;\\r\\n    border-radius: 5px;\\r\\n    padding: 15px;\\r\\n}\\r\\n.nav-link.active{\\r\\n    background-color: 0275d8 !important;\\r\\n    border-radius: 0px !important;\\r\\n    color: white !important;\\r\\n}\\r\\n.nav-item{\\r\\n    padding: 0px !important;\\r\\n}\\r\\nbody{\\r\\n    background-color: white !important;\\r\\n}\\r\\nli{\\r\\n    background-color: gainsboro;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.pageTitle{\\r\\n    font-family: fantasy;\\r\\n    color: #0275d8;\\r\\n    font-size: 45px;\\r\\n}\\r\\n\\r\\n.table-fixed tbody {\\r\\n    height: 400px;\\r\\n    overflow-y: auto;\\r\\n    width: 100%;\\r\\n  }\\r\\n  .table-fixed {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .table-fixed thead, .table-fixed tbody, .table-fixed tr{\\r\\n    display: block;\\r\\n  }\\r\\n.uploadSuccess{\\r\\n    font-size: 30px;\\r\\n    font-weight: bold;\\r\\n    color: green;\\r\\n}\\r\\n.uploadError{\\r\\n    font-size: 30px;\\r\\n    font-weight: bold;\\r\\n    color: red;\\r\\n}\\r\\n.mappingTable{\\r\\n    margin-top: 5px;\\r\\n    width:600px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.tablePadding{\\r\\n    padding: 5px; \\r\\n    width: 270px;\\r\\n    background-color:#0275d8;\\r\\n    border-radius: 6px;\\r\\n}\\r\\n.mappingTableData{\\r\\n    font-size: 16px;\\r\\n    font-weight: bold;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.mappingTable th{\\r\\n    text-align: center;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Kanban-Dashboard/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 2","module.exports = \"<div class=\\\"container\\\">\\n  <div class = \\\"row\\\">\\n    <div class=\\\"col-sm-8\\\">\\n      <h1 class=\\\"pageTitle\\\">Kanban Dashboard</h1>\\n    </div>\\n    <!-- Date Picker -->\\n    <div class=\\\"col-sm-3\\\" style=\\\"margin-top: 10px\\\"> \\n      <form #myForm=\\\"ngForm\\\" novalidate>\\n        <my-date-picker name=\\\"mydate\\\" [options]=\\\"myDatePickerOptions\\\"\\n                        (dateChanged)=\\\"onDateChangedPlan($event)\\\" [selDate]=\\\"selDate\\\" required ></my-date-picker>\\n      </form>\\n    </div>\\n  </div>\\n  <!--  Tabs -->\\n  <ul class=\\\"nav nav-pills row navTabs\\\">\\n    <li class=\\\"nav-item col-sm-3\\\">\\n      <a style=\\\"text-align: center;cursor: pointer\\\" class=\\\"nav-link active\\\" id=\\\"plan\\\" data-toggle=\\\"tab\\\" (click)=\\\"changeTab('plan')\\\" role=\\\"tab\\\">Plan</a>\\n    </li>\\n    <li class=\\\"nav-item col-sm-3\\\">\\n      <a style=\\\"text-align: center;cursor: pointer\\\" class=\\\"nav-link\\\" id=\\\"actual\\\" data-toggle=\\\"tab\\\" (click)=\\\"changeTab('actual')\\\" role=\\\"tab\\\">Actual</a>\\n    </li>\\n    <li class=\\\"nav-item col-sm-3\\\" *ngIf=\\\"uploadDefectsTab\\\">\\n      <a style=\\\"text-align: center;cursor: pointer\\\" class=\\\"nav-link\\\" id=\\\"upload\\\" data-toggle=\\\"tab\\\" (click)=\\\"uploadTab()\\\" role=\\\"tab\\\">Upload Defects</a>\\n    </li>\\n    <li class=\\\"nav-item col-sm-3\\\">\\n      <a style=\\\"text-align: center;cursor: pointer\\\" class=\\\"nav-link\\\" id=\\\"updateCollection\\\" data-toggle=\\\"tab\\\" (click)=\\\"updateCollection()\\\" role=\\\"tab\\\">Update Collections</a>\\n    </li>\\n  </ul>\\n\\n  <div *ngIf=\\\"tableView\\\"> \\n    <div class=\\\"row\\\">  \\n      <!--Plan/Actual table start-->\\n      <div class=\\\"col-sm-10\\\" *ngIf=\\\"showTable\\\"> \\n        <table class=\\\"table table-fixed\\\" style=\\\"margin-top: 5px\\\">\\n          <thead>\\n            <tr>\\n              <th style = \\\"width: 153px\\\" scope=\\\"col\\\">Defects</th>\\n              <th style = \\\"width: 153px\\\" scope=\\\"col\\\">Analysis</th>\\n              <th style = \\\"width: 153px\\\" scope=\\\"col\\\">Fixed</th>\\n              <th style = \\\"width: 153px\\\" scope=\\\"col\\\">Retest</th>\\n              <th style = \\\"width: 153px\\\" scope=\\\"col\\\">Deployment</th>\\n              <th style = \\\"width: 153px\\\" scope=\\\"col\\\">Onhold</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <td [dragula]='\\\"first-bag\\\"' [dragulaModel]='newDefects'>\\n                <div *ngFor = \\\"let item of newDefects\\\" style=\\\"padding:5px;width:120px;\\\"> \\n                      <div [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='PV'}\\\" style=\\\"border-radius: 5px;padding: 5px;\\\">\\n                          <div>\\n                            <div>\\n                              <b>{{item.defectId}}</b>\\n                              <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                              <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                              <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                            <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                          </div>\\n                            <div>\\n                              <span *ngIf=\\\"item.module=='' || item.module == null;else module\\\" class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                              <ng-template #module>\\n                                  <span  class=\\\"badge badge-primary\\\">{{item.module.substring(0, 2)}}</span>\\n                              </ng-template>\\n                              <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                              <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                              <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                              <span *ngIf=\\\"item.workedBy=='' || item.workedBy == null;else workedBy\\\" class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n                              <ng-template #workedBy>\\n                                  <span  class=\\\"badge badge-primary\\\">{{item.workedBy.substring(0, 4)}}</span>\\n                              </ng-template>\\n                            </div>\\n                          </div>\\n                    </div>\\n                </div>\\n              </td>\\n              <td  [dragula]='\\\"first-bag\\\"' [dragulaModel]='analysis'>\\n                <div *ngFor = \\\"let item of analysis\\\" style=\\\"padding:5px;width:120px\\\">\\n                  <div [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='PV'}\\\" style=\\\"border-radius: 5px;padding: 5px;\\\">\\n                    <div>\\n                      <div>\\n                          <b>{{item.defectId}}</b>\\n                          <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                          <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                          <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                    </div>\\n                      <div>\\n                        <span *ngIf=\\\"item.module=='' || item.module == null;else module\\\" class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                        <ng-template #module>\\n                          <span  class=\\\"badge badge-primary\\\">{{item.module.substring(0, 2)}}</span>\\n                        </ng-template>\\n                        <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                        <span *ngIf=\\\"item.workedBy=='' || item.workedBy == null;else workedBy\\\" class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n                        <ng-template #workedBy>\\n                          <span  class=\\\"badge badge-primary\\\">{{item.workedBy.substring(0, 4)}}</span>\\n                        </ng-template>\\n                      </div>\\n                    </div>\\n              </div>\\n                </div>\\n              </td>\\n              <td  [dragula]='\\\"first-bag\\\"' [dragulaModel]='fixed'>\\n                <div *ngFor = \\\"let item of fixed\\\" style=\\\"padding:5px;width: 120px;\\\">\\n                  <div [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='PV'}\\\" style=\\\"border-radius: 5px;padding: 5px;\\\">\\n                    <div>\\n                      <div>\\n                          <b>{{item.defectId}}</b>\\n                          <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                          <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                          <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                    </div>\\n                      <div>\\n                        <span *ngIf=\\\"item.module=='' || item.module == null;else module\\\" class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                        <ng-template #module>\\n                          <span  class=\\\"badge badge-primary\\\">{{item.module.substring(0, 2)}}</span>\\n                        </ng-template>\\n                        <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                        <span *ngIf=\\\"item.workedBy=='' || item.workedBy == null;else workedBy\\\" class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n                        <ng-template #workedBy>\\n                          <span  class=\\\"badge badge-primary\\\">{{item.workedBy.substring(0, 4)}}</span>\\n                        </ng-template>\\n                      </div>\\n                    </div>\\n              </div>\\n                </div>\\n              </td>\\n              <td  [dragula]='\\\"first-bag\\\"' [dragulaModel]='retest'>\\n                <div *ngFor = \\\"let item of retest\\\" style=\\\"padding:5px;width:120px;\\\">\\n                  <div [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='PV'}\\\" style=\\\"border-radius: 5px;padding: 5px;\\\">\\n                    <div>\\n                      <div>\\n                          <b>{{item.defectId}}</b>\\n                          <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                          <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                          <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                    </div>\\n                      <div>\\n                        <span *ngIf=\\\"item.module=='' || item.module == null;else module\\\" class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                        <ng-template #module>\\n                          <span  class=\\\"badge badge-primary\\\">{{item.module.substring(0, 2)}}</span>\\n                        </ng-template>\\n                        <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                        <span *ngIf=\\\"item.workedBy=='' || item.workedBy == null;else workedBy\\\" class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n                        <ng-template #workedBy>\\n                          <span  class=\\\"badge badge-primary\\\">{{item.workedBy.substring(0, 4)}}</span>\\n                        </ng-template>\\n                      </div>\\n                    </div>\\n              </div>\\n                </div>\\n              </td>\\n              <td  [dragula]='\\\"first-bag\\\"' [dragulaModel]='deployment'>\\n                <div *ngFor = \\\"let item of deployment\\\"  style=\\\"padding:5px;width: 120px\\\">\\n                  <div [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='PV'}\\\" style=\\\"border-radius: 5px;padding: 5px;\\\">\\n                    <div>\\n                      <div>\\n                          <b>{{item.defectId}}</b>\\n                          <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                          <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                          <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                    </div> \\n                      <div>\\n                        <span *ngIf=\\\"item.module=='' || item.module == null;else module\\\" class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                        <ng-template #module>\\n                          <span  class=\\\"badge badge-primary\\\">{{item.module.substring(0, 2)}}</span>\\n                        </ng-template>\\n                        <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                        <span *ngIf=\\\"item.workedBy=='' || item.workedBy == null;else workedBy\\\" class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n                        <ng-template #workedBy>\\n                          <span  class=\\\"badge badge-primary\\\">{{item.workedBy.substring(0, 4)}}</span>\\n                        </ng-template>\\n                      </div>\\n                    </div>\\n              </div>\\n                </div>\\n              </td>\\n              <td  [dragula]='\\\"first-bag\\\"' [dragulaModel]='onhold'>\\n                <div *ngFor = \\\"let item of onhold\\\"  style=\\\"padding:5px;width: 120px\\\">\\n                  <div [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='PV'}\\\" style=\\\"border-radius: 5px;padding: 5px;\\\">\\n                    <div>\\n                      <div>\\n                          <b>{{item.defectId}}</b>\\n                          <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                          <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                          <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                    </div>\\n                      <div>\\n                        <span *ngIf=\\\"item.module=='' || item.module == null;else module\\\" class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                        <ng-template #module>\\n                          <span  class=\\\"badge badge-primary\\\">{{item.module.substring(0, 2)}}</span>\\n                        </ng-template>\\n                        <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                        <span *ngIf=\\\"item.workedBy=='' || item.workedBy == null;else workedBy\\\" class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n                        <ng-template #workedBy>\\n                          <span  class=\\\"badge badge-primary\\\">{{item.workedBy.substring(0, 4)}}</span>\\n                        </ng-template>\\n                      </div>\\n                    </div>\\n              </div>\\n                </div>\\n              </td>     \\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"col-sm-10\\\" *ngIf = \\\"!showTable\\\">\\n        <h1>No Data Available</h1>\\n      </div>\\n      <!--Plan/Actual table end-->\\n      <div class=\\\"col-sm-2\\\">\\n        <div>\\n            <button type=\\\"button\\\" *ngIf=\\\"(tabSelected=='plan' || tabSelected == '') && freeze == true\\\" class=\\\"btn btn-primary freezeBtn\\\" (click)=\\\"freezePlan()\\\">Freeze plan</button>\\n        </div>\\n        <div>\\n            <button type=\\\"button\\\" *ngIf=\\\"(tabSelected=='plan' || tabSelected == '') && freeze == false\\\" class=\\\"btn btn-primary freezeBtn\\\" data-toggle=\\\"modal\\\" data-target=\\\"#Warning\\\">Unfreeze plan</button>\\n        </div>\\n        <!-- AQI table -->\\n        <div class=\\\"row\\\" > \\n          <table class=\\\"table table-bordered table-success\\\" style=\\\"line-height: 6px;\\\">\\n            <thead>\\n              <tr>\\n                <th colspan=\\\"3\\\" style=\\\"text-align: center; font-size: 14px;\\\">AQI</th>\\n              </tr>\\n              <tr>\\n                <th colspan=\\\"3\\\" style=\\\"text-align: center;font-size: 14px;\\\">{{AQIData.AQI}}</th>\\n              </tr>\\n            </thead>\\n            <tbody style =\\\"font-size: 14px;\\\">\\n              <tr>\\n                <th>S1</th>\\n                <th>S2</th>\\n                <th>S3</th>\\n              </tr>\\n              <tr>\\n                <td>\\n                  <a *ngIf=\\\"AQIData.severity1>0;else zeroDefect\\\" data-toggle=\\\"modal\\\" data-target=\\\"#defectListModal\\\" href=\\\"#\\\" (click)=\\\"loadTable('AQI','Severity 1')\\\">{{AQIData.severity1}}</a>\\n                  <ng-template #zeroDefect>\\n                    <span>0</span>\\n                  </ng-template>\\n                </td>\\n                <td>\\n                  <a *ngIf=\\\"AQIData.severity2>0;else zeroDefect\\\" data-toggle=\\\"modal\\\" data-target=\\\"#defectListModal\\\" href=\\\"#\\\" (click)=\\\"loadTable('AQI','Severity 2')\\\">{{AQIData.severity2}}</a>\\n                </td>\\n                <td>\\n                  <a *ngIf=\\\"AQIData.severity3>0;else zeroDefect\\\" data-toggle=\\\"modal\\\" data-target=\\\"#defectListModal\\\" href=\\\"#\\\" (click)=\\\"loadTable('AQI','Severity 3')\\\">{{AQIData.severity3}}</a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <!-- Recently closed defects table -->\\n        <div class=\\\"row\\\" > \\n          <table class=\\\"table table-bordered table-info\\\" style=\\\"line-height: 12px;\\\">\\n            <thead>\\n              <tr>\\n                <th colspan=\\\"3\\\" style=\\\"text-align: center; font-size: 14px;\\\">Recently Closed/Cancelled</th>\\n              </tr>\\n            </thead>\\n            <tbody style =\\\"font-size: 14px;\\\">\\n              <tr>\\n                <td>\\n                  <div class=\\\"recently-closed\\\"> Select Week # </div><!--   strat from here  -->\\n                    <label class=\\\"form-check-label\\\">\\n                        <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"week\\\"  (click)=\\\"radioButtonClick(1)\\\" checked>\\n                        1\\n                    </label>\\n                    <label class=\\\"form-check-label\\\">\\n                        <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"week\\\" (click)=\\\"radioButtonClick(2)\\\">\\n                        2\\n                    </label>\\n                    <label class=\\\"form-check-label\\\">\\n                        <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"week\\\" (click)=\\\"radioButtonClick(3)\\\">\\n                      3\\n                    </label>\\n                    <label class=\\\"form-check-label\\\">\\n                        <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"week\\\" (click)=\\\"radioButtonClick(4)\\\">\\n                        4\\n                    </label>\\n                </td>\\n                <td>\\n                    <a data-toggle=\\\"modal\\\" (click)=\\\"loadTable('Closed',daysString)\\\" href=\\\"#\\\" data-target=\\\"#defectListModal\\\">{{defectsCount}}</a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <!-- Release defects table -->\\n        <div class=\\\"row\\\" > \\n          <table class=\\\"table table-bordered table-success\\\" style=\\\"line-height: 6px;\\\">\\n            <thead>\\n              <tr>\\n                <th  style=\\\"text-align: center; font-size: 14px;\\\">Release Date</th>\\n                <th style=\\\"text-align: center;font-size: 14px;\\\">Count</th>\\n              </tr>\\n            </thead>\\n            <tbody style =\\\"font-size: 14px;\\\">\\n              <tr >\\n                <td> \\n                  {{releaseListDefects.date}}\\n                </td>\\n                <td>\\n                  <a data-toggle=\\\"modal\\\" (click)=\\\"loadTable('Release',releaseListDefects.date)\\\" href=\\\"#\\\" data-target=\\\"#defectListModal\\\"> {{releaseListDefects.count}}</a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Upload tab view -->\\n  <div *ngIf=\\\"uploadTabView\\\" style=\\\"margin-top:20px;\\\">\\n    <h2>Select file to upload Defects/Template</h2>\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-3\\\" style=\\\"margin:20px;\\\">\\n        <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"dropdownValue\\\" [(ngModel)]=\\\"dropdownValue\\\" (change)=\\\"uploadDropdownChange()\\\">\\n            <option>Select</option>\\n            <option *ngFor=\\\"let template of templates\\\">{{template}}</option>\\n        </select>\\n      </div>\\n      <div style=\\\"margin: 20px\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createTemplate\\\">create new template</button>\\n      </div>\\n    </div>\\n    <div *ngIf = \\\"dropdownValue!='Select'\\\">\\n      <div style=\\\"margin: 20px\\\">\\n        <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" class=\\\"File\\\" name=\\\"uploadedFile\\\">\\n      </div>\\n      <div style=\\\"margin: 20px\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"uploadDefects()\\\">upload</button>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"upload\\\" class=\\\"uploadSuccess\\\">\\n      Uploaded successfully.\\n    </div>\\n    <div *ngIf=\\\"upload\\\" class=\\\"uploadError\\\">\\n        Some error occured , Please try again later.\\n    </div>\\n    <div  style =\\\"align-items: center\\\" *ngIf=\\\"showMappingTable\\\">\\n      <table class=\\\"table mappingTable\\\">\\n        <thead style=\\\"font-size: 20px;\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">Reference Columns</th>\\n            <th scope=\\\"col\\\">-</th>\\n            <th scope=\\\"col\\\">Uploaded columns</th>\\n          </tr>\\n        </thead>\\n        <tbody class=\\\"mappingTableData\\\">\\n          <tr>\\n            <td>\\n              <div style=\\\"padding: 5px;\\\" *ngFor=\\\"let column of referenceTemplateColumns\\\">\\n                <div class=\\\"tablePadding\\\">\\n                  {{column.columnName}}\\n                </div>\\n              </div>\\n            </td>\\n            <td style=\\\"width:160px;background-color: white;\\\">\\n              <div style=\\\"padding: 5px;\\\" *ngFor=\\\"let column of referenceTemplateColumns\\\">\\n                <div style=\\\"padding: 5px;\\\">\\n                  -\\n                </div>\\n              </div>\\n            </td>\\n            <td [dragula]='\\\"second-bag\\\"' [dragulaModel]='uploadedTemplateColumns'>\\n              <div style=\\\"padding: 5px;\\\" *ngFor=\\\"let columns of uploadedTemplateColumns\\\">\\n                <div class=\\\"tablePadding\\\">\\n                  {{columns.headerName}}\\n                </div>\\n              </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <div style=\\\"margin: 20px\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"uploadMappedColumns()\\\">submit</button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Update Collection tab view-->\\n  <div *ngIf=\\\"updateCollectionTabView\\\" style=\\\"margin-top:20px;\\\">\\n    <div style=\\\"margin: 20px\\\">\\n      <h2> Select collection to modify </h2>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-3\\\" style=\\\"margin:20px;\\\">\\n        <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"dropdownValue\\\" [(ngModel)]=\\\"dropdownValue\\\" (change)=\\\"dropdownChange()\\\">\\n            <option>Select</option>\\n            <option>Users</option>\\n            <option>Modules</option>\\n            <option>Release Dates</option>\\n        </select>\\n      </div>\\n    </div>\\n    <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th *ngFor=\\\"let key of tableKeys\\\">{{key}}</th>\\n            <th>Edit</th>\\n            <th>Delete</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let data of tableValues\\\" >\\n            <td *ngFor=\\\"let heads of tableKeys\\\">{{data[heads]}}</td>\\n            <td><a href=\\\"\\\" data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#editRowModal\\\" (click)=\\\"modifyRow(data)\\\"><i class=\\\"fa fa-pencil\\\"></i></a></td>\\n            <td><a href=\\\"\\\" data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#deleteRowModal\\\" (click)=\\\"modifyRow(data)\\\"><i class=\\\"fa fa-trash-o\\\"></i></a></td>\\n          </tr>\\n        </tbody>\\n      </table>\\n  </div>\\n</div>\\n\\n  <!-- Edit Defect Details Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">{{clickedDefect.defectId}}</h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <div>{{clickedDefect.description}}</div>\\n            <form #editForm=\\\"ngForm\\\">\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"exampleSelect1\\\" class=\\\"col-2 col-form-label\\\">Module</label>\\n                <div class=\\\"col-10\\\">\\n                  <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"module\\\" [(ngModel)]=\\\"clickedDefect.module\\\">\\n                    <option *ngFor = \\\"let item of modulesList\\\">{{item.module}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Severity</label>\\n                <div class=\\\"col-10\\\">\\n                  <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"severity\\\" [(ngModel)]=\\\"clickedDefect.severity\\\">\\n                      <option>Severity 1</option>\\n                      <option>Severity 2</option>\\n                      <option>Severity 3</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"exampleSelect1\\\" class=\\\"col-2 col-form-label\\\">Worked By</label>\\n                <div class=\\\"col-10\\\">\\n                  <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"workedBy\\\" [(ngModel)]=\\\"clickedDefect.workedBy\\\">\\n                    <option>{{clickedDefect.workedBy}}</option>\\n                    <option *ngFor = \\\"let item of userList\\\">{{item}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"exampleSelect1\\\" class=\\\"col-2 col-form-label\\\">ETA</label>\\n                <div class=\\\"col-10\\\">\\n                  <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"eta\\\" [(ngModel)]=\\\"clickedDefect.eta\\\">\\n                    <option>N/A</option>\\n                    <option *ngFor = \\\"let item of releaseList\\\">{{item}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"exampleSelect1\\\" class=\\\"col-2 col-form-label\\\">Progress</label>\\n                  <div class=\\\"col-10\\\">\\n                    <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"progress\\\" [(ngModel)]=\\\"clickedDefect.progress\\\">\\n                      <option>Not started</option>\\n                      <option>In progress</option>\\n                      <option>Completed</option>                   \\n                    </select>\\n                  </div>\\n                </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Complexity</label>\\n                <div class=\\\"col-10\\\">\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"example-text-input\\\" name=\\\"complexity\\\" [(ngModel)]=\\\"clickedDefect.complexity\\\">\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"update(editForm.value)\\\">update</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  <!--  Defect Table Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"defectListModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\" style=\\\"max-width: 95%\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\" style=\\\"font-weight: bolder\\\">{{selectedTable}}Defects</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <table class=\\\"table\\\">\\n              <thead>\\n                <tr>\\n                  <th>DefectId</th>\\n                  <th>Summary</th>                        \\n                  <th>Module</th>                        \\n                  <th>Severity</th>\\n                  <th>Defect type</th>\\n                  <th>Phase found in</th>\\n                  <th>Status</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let data of tableData\\\">\\n                  <td>{{data.DefectId}}</td>\\n                  <td>{{data.Summary}}</td>\\n                  <td>{{data['Application Found In SubTeam']}}</td>\\n                  <td>{{data.Severity}}</td>\\n                  <td>{{data['Defect Type']}}</td>\\n                  <td>{{data['Phase Found In']}}</td>\\n                  <td>{{data.Status}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n     <!-- Warning modal unfreeze plan-->\\n    <div class=\\\"modal fade\\\" id=\\\"Warning\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\" style=\\\"max-width: 500px\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\" style=\\\"font-weight: bolder\\\">Warning</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <div>\\n                On clicking Ok your actual becomes your plan\\n              </div>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"unFreezePlan()\\\">Ok</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Edit collection modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"editRowModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\" style=\\\"max-width: 500px\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\" style=\\\"font-weight: bolder\\\">Update Collection</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <table class=\\\"table borderless\\\">\\n              <tbody>\\n                <tr *ngFor=\\\"let heads of tableKeys\\\">\\n                  <th scope=\\\"row\\\">{{heads}}</th>\\n                  <td><input type=\\\"text\\\"[(ngModel)]=\\\"selectedTableRow[heads]\\\"></td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"editCollectionDetails()\\\">Update</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Delete collection modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"deleteRowModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\" style=\\\"max-width: 500px\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\" style=\\\"font-weight: bolder\\\">Delete Collection</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <div>\\n              <h4>Are you sure,you want to delete this record</h4>\\n            </div>\\n            <table class=\\\"table borderless\\\">\\n              <tbody>\\n                <tr *ngFor=\\\"let heads of tableKeys\\\">\\n                  <th scope=\\\"row\\\">{{heads}}</th>\\n                  <td>-</td>\\n                  <td>{{selectedTableRow[heads]}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"deleteRow()\\\">Delete</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- create template -->\\n    <div class=\\\"modal fade\\\" id=\\\"createTemplate\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\" style=\\\"max-width: 500px\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\" style=\\\"font-weight: bolder\\\">Create new template</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <div>\\n               Template name:\\n               <input type=\\\"text\\\" [(ngModel)]=\\\"templateName\\\">\\n               <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" class=\\\"File\\\" name=\\\"uploadedFile\\\">\\n              </div>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"uploadTemplate()\\\">Upload Template</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Kanban-Dashboard/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 2","import { Component,OnInit,ElementRef, Input, ViewChild,  ViewEncapsulation } from '@angular/core';\nimport { DefectlistService } from './defectlist.service';\nimport {IMyDpOptions, IMyDateModel, IMyDate} from 'mydatepicker';\nimport { DragulaService } from 'ng2-dragula';\nimport { FileUploader } from 'ng2-file-upload';\nimport { Http, RequestOptions, Headers, Response} from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  private newDefects:Array<any> = [];\n  private analysis:Array<any> = [];\n  private fixed:Array<any> = [];\n  private retest:Array<any> = [];\n  private deployment:Array<any> = [];\n  private onhold:Array<any> = [];\n  private formattedDate:string = \"\";\n  private clickedDefect:any = {};\n  private modulesList:Array<any> = [];\n  private selDate: IMyDate = {year: 0, month: 0, day: 0};\n  private userList:Array<any> = [];\n  private releaseList:Array<any> = [];\n  private tabSelected:string = \"\";\n  private version:number;\n  private AQIData:any={}\n  private showTable:boolean=true;\n  private tableData:Array<any> = [];\n  private selectedTable:string = \"\";\n  private defectsCount:number;\n  private days:number;\n  private daysString:string;\n  private releaseListDefects:Array<any> = [];\n  private freeze:boolean = true;\n  private uploadTabView:boolean=false;\n  private uploadDefectsTab:boolean=true;\n  private updateCollectionTabView:boolean=false;\n  private dropdownValue:string=\"Select\";\n  private tableView:boolean=true;\n  private tableValues:Array<any>=[];\n  private tableKeys:Array<string>=[]\n  private selectedTableRow={};\n  private fileList: FileList = null;\n  private unfreezeClicked: boolean = false;\n  private templates:Array<any> = [];\n  private templateName:string='';\n  private uploadedTemplateColumns:Array<any> = [];\n  private referenceTemplateColumns:Array<any> = [];\n  private mappedColumns:Array<any> = [];\n  private upload:boolean=null;\n  private showMappingTable = null;\n  private todayDate:Date = new Date();\n  @ViewChild('fileInput') inputEl: ElementRef;\n  \n   constructor(private defectListService:DefectlistService , private dragulaService: DragulaService, private http:Http ,private cookieService: CookieService){\n     let d: Date = new Date();\n     this.selDate = {year: d.getFullYear(), month: d.getMonth()+1, day: d.getDate()};\n     this.tabSelected = \"plan\";\n \n     this.dragulaService.drop.subscribe((value) => {\n         for(let i = 0;i<this.analysis.length;i++){\n           if(this.analysis[i].status != \"Analysis\"){\n             this.analysis[i].status = \"Analysis\";\n             this.analysis[i].progress = \"Not started\";\n             if(this.tabSelected == \"actual\"){\n               this.updateActual(this.analysis[i]);\n             }\n             break;\n           }\n         }\n \n         for(let i = 0;i<this.fixed.length;i++){\n           if(this.fixed[i].status != \"Fixed\"){\n             this.fixed[i].status = \"Fixed\";\n             this.fixed[i].progress = \"Not started\";\n             if(this.tabSelected == \"actual\"){\n              this.updateActual(this.fixed[i]);\n            }\n             break;\n           }\n         }\n     \n         for(let i = 0;i<this.retest.length;i++){\n           if(this.retest[i].status != \"Retest\"){\n             this.retest[i].status = \"Retest\";\n             this.retest[i].progress = \"Not started\";\n             if(this.tabSelected == \"actual\"){\n              this.updateActual(this.retest[i]);\n            }\n             break;\n           }\n         }\n     \n         for(let i = 0;i<this.deployment.length;i++){\n           if(this.deployment[i].status != \"Deployment\"){\n             this.deployment[i].status = \"Deployment\";\n             this.deployment[i].progress = \"Not started\";\n             if(this.tabSelected == \"actual\"){\n              this.updateActual(this.deployment[i]);\n            }\n             break;\n           }\n         }\n     \n         for(let i = 0;i<this.onhold.length;i++){\n           if(this.onhold[i].status != \"Onhold\"){\n             this.onhold[i].status = \"Onhold\";\n             this.onhold[i].progress = \"Not started\";\n             if(this.tabSelected == \"actual\"){\n              this.updateActual(this.onhold[i]);\n            }\n             break;\n           }\n         }\n     \n         for(let i = 0;i<this.newDefects.length;i++){\n           if(this.newDefects[i].status != \"\"){\n             this.newDefects[i].status = \"\";\n             this.newDefects[i].progress = \"Not started\";\n             if(this.tabSelected == \"actual\"){\n              this.updateActual(this.newDefects[i]);\n            }\n             break;\n           }\n         }\n     });\n   }\n \n   ngOnInit() {\n    this.dateFormatter(this.selDate);\n    this.loadData();\n    this.getUsersList();\n    this.getModulesList();\n    this.getReleaseList();\n    this.getAQIData();\n    this.radioButtonClick(1);\n    this.getReleaseDateAndDefects();\n    /*if(this.cookieService.check('freeze') && this.cookieService.get('freeze')=='true'){\n      this.freeze = false;\n    }\n    else if(this.cookieService.check('freeze') && this.cookieService.get('freeze')=='false'){\n      this.freeze = true;\n    }*/\n    }\n    \n    loadData(){\n      if(this.tabSelected == \"plan\" || this.tabSelected == \"\"){\n        this.getDefectListPlan(this.formattedDate);\n      }\n      else{\n        this.getDefectListActual(this.formattedDate);            \n      }\n    }\n    onDateChangedPlan(event: IMyDateModel) {\n      let currentDate = this.todayDate.getDate();\n      let currentMonth = this.todayDate.getMonth()+1;\n      let currentYear = this.todayDate.getFullYear();\n      if(currentDate != event.date.day || currentMonth != event.date.month || currentYear != event.date.year){\n        this.freeze = null;\n        this.uploadDefectsTab=false;\n      }\n      else{\n        this.uploadDefectsTab=true;\n        // write code to display freeze or unfreeze based on api responce\n      }\n      this.dateFormatter(event.date);\n      this.loadData();\n      document.getElementById('plan').classList.add(\"active\");\n      document.getElementById('actual').classList.remove(\"active\");\n      document.getElementById('upload').classList.remove(\"active\");\n      document.getElementById('updateCollection').classList.remove(\"active\");\n      this.tabSelected = 'plan';\n      this.uploadTabView = false;\n      this.updateCollectionTabView = false;\n      this.tableView = true;\n    }\n \n    changeTab(tab){\n      this.uploadTabView = false;\n      this.updateCollectionTabView = false;\n      this.tableView = true;\n      if(tab == \"plan\"){\n        this.tabSelected = \"plan\";\n      }\n      else{\n        this.tabSelected = \"actual\";\n      }\n      this.loadData();      \n    }\n\n    getDefectListPlan(date){ \n      let data;\n      this.defectListService.getDefectListPlan(this.formattedDate)\n        .finally(() => {\n            if(this.analysis.length<=0 && this.fixed.length<=0 && this.retest.length<=0 && this.deployment.length<=0 && this.onhold.length<=0 && this.newDefects.length<=0){\n              this.showTable = false;\n            }\n            else{\n              this.showTable = true;\n            }\n      })  \n      .subscribe(\n       res => data = res,\n       err => {\n        this.analysis=[];\n        this.deployment=[];\n        this.fixed=[];\n        this.newDefects=[];\n        this.retest=[];\n        this.onhold=[];\n       },\n       () => {\n         this.analysis=[];\n         this.deployment=[];\n         this.fixed=[];\n         this.newDefects=[];\n         this.retest=[];\n         this.onhold=[];\n         this.version=data.version;\n        // if(this.tabSelected == \"plan\" || this.tabSelected == \"\"){\n          for(let i=0;i<data.plan.length;i++){\n            if(data.plan[i].status==\"Analysis\"){\n                this.analysis.push(data.plan[i]);\n            }\n            else if(data.plan[i].status==\"Fixed\"){\n                this.fixed.push(data.plan[i]);\n            }\n            else if(data.plan[i].status==\"Retest\"){\n                this.retest.push(data.plan[i]);\n            }\n            else if(data.plan[i].status==\"Deployment\"){\n                this.deployment.push(data.plan[i]);\n            }\n            else if(data.plan[i].status==\"Onhold\"){\n                this.onhold.push(data.plan[i]);\n            }\n            else{\n                this.newDefects.push(data.plan[i]);\n            }\n          }\n       // }\n     /*   else{\n          for(let i=0;i<data.actual.length;i++){\n            if(data.actual[i].status==\"Analysis\"){\n                this.analysis.push(data.actual[i]);\n            }\n            else if(data.actual[i].status==\"Fixed\"){\n                this.fixed.push(data.actual[i]);\n            }\n            else if(data.actual[i].status==\"Retest\"){\n                this.retest.push(data.actual[i]);\n            }\n            else if(data.actual[i].status==\"Deployment\"){\n                this.deployment.push(data.actual[i]);\n            }\n            else if(data.actual[i].status==\"Onhold\"){\n                this.onhold.push(data.actual[i]);\n            }\n            else{\n                this.newDefects.push(data.actual[i]);\n            }\n          }\n        } */\n       }\n     );\n     \n    }\n\n    updateActual(defect){\n      let data;\n      let actual:Array<any> = [];\n      actual.push(defect)\n      let request = {\n        date : this.formattedDate,\n        actual : actual,\n        version : this.version\n      };\n       this.defectListService.updateActual(request).subscribe(\n         res => data = res,\n         err => console.log(err),\n         () => {\n           \n           }\n       )\n       console.log(data);\n    }\n \n    getUsersList(){\n      let data;\n       this.defectListService.getUsersList().subscribe(\n         res => data = res,\n         err => console.log(err),\n         () => {\n           for(let i=0;i<data.length;i++){\n             this.userList.push(data[i].name);\n           }\n         }\n       )\n    }\n \n    getModulesList(){\n     let data;\n      this.defectListService.getModuleList().subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n          for(let i=0;i<data.length;i++){\n           let obj : any= {};          \n            obj.module=data[i].module;\n            obj.alias=data[i].alias;\n            this.modulesList.push(obj);\n          }\n        }\n      )\n   }\n \n   getReleaseList(){\n     let data;\n      this.defectListService.getReleaseList().subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n          for(let i=0;i<data.length;i++){\n            this.releaseList.push(data[i].key);\n          }\n        }\n      )\n   }\n\n   getReleaseDateAndDefects(){\n    let data;\n     this.defectListService.getReleaseListDefects().subscribe(\n       res => data = res,\n       err => console.log(err),\n       () => {\n          this.releaseListDefects = data;\n       }\n     )\n  }\n\n   getAQIData(){\n    let data;\n     this.defectListService.getAQIData().subscribe(\n       res => data = res,\n       err => console.log(err),\n       () => {\n         this.AQIData=data;\n       }\n     )\n  }\n \n    dateFormatter(date){\n      let day = date.day;\n      let month=date.month;\n      if(date.day < 10 ){\n        day = \"0\"+date.day;\n      }\n      if(date.month < 10){\n        month = \"0\"+date.month;\n      }\n      this.formattedDate = month+\"-\"+day+\"-\"+date.year;\n    }\n \n    edit(defectObj){\n      this.clickedDefect = defectObj;\n    }\n    \n    update(values){\n      if(this.clickedDefect.status == \"Analysis\"){\n         this.updateArray(this.analysis,values);\n      }\n      else if(this.clickedDefect.status == \"Fixed\"){\n         this.updateArray(this.fixed,values);\n      }\n      else if(this.clickedDefect.status == \"Retest\"){\n         this.updateArray(this.retest,values);\n      }\n      else if(this.clickedDefect.status == \"Deployment\"){\n         this.updateArray(this.deployment,values);\n      }\n      else if(this.clickedDefect.status == \"Onhold\"){\n         this.updateArray(this.onhold,values);\n      }\n      else{\n         this.updateArray(this.newDefects,values);\n      }\n    }\n    updateArray(array,values){\n     for(let i =0;i<array.length;i++){\n       if(array[i].defectId == this.clickedDefect.defectId){\n         array[i].module=values.module;\n         array[i].severity=values.severity;\n         array[i].workedBy=values.workedBy;\n         array[i].eta=values.eta;\n         array[i].progress=values.progress;\n         array[i].complexity=values.complexity;\n         if(this.tabSelected == \"actual\"){\n          this.updateActual(array[i]);          \n         }\n       }\n     }\n    }\n    freezePlan(){\n     this.freeze = false;\n     let plan:Array<any> = [];\n     plan = Array.prototype.concat(this.newDefects, this.analysis, this.fixed, this.retest, this.deployment, this.onhold);     \n     let request = {\n       date : this.formattedDate,\n       plan : plan,\n       actual : plan,\n       version : this.version\n     };\n     let data;\n     this.defectListService.insertPlanMapping(request).subscribe(\n       res => data = res,\n       err => console.log(err),\n       () => {\n        if(data == \"sucess\"){\n          this.cookieService.set('freeze','true');\n        }\n      }\n     );\n    }\n\n    loadTable(table,tableValue){\n      if(table == \"AQI\"){\n        this.selectedTable = \"AQI \";\n      }\n      else if(table == \"Closed\"){\n        this.selectedTable = \"Recently Closed/Cancelled \";\n      }\n      else if(table == \"Release\"){\n        this.selectedTable = \"Release \";\n      }\n      let data;\n      let request={\n        query:table,\n        value:tableValue\n      };\n      this.defectListService.getDefectsTable(request).subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n          this.tableData=data;\n        }\n      )\n    }\n\n    radioButtonClick(number){   //check type of number and severity\n      this.days=number*7\n      this.daysString=this.days.toString();\n      let data;\n      this.defectListService.getClosedDefectsData(this.days).subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n          this.defectsCount=data;\n        }\n      )\n    }\n\n    unFreezePlan(){\n      this.freeze=true;\n      this.unfreezeClicked=true;\n      this.getDefectListActual(this.formattedDate);\n    }\n\n    uploadTab(){\n      let data;\n      this.uploadTabView=true;\n      this.updateCollectionTabView = false;\n      this.tableView = false;\n      this.dropdownValue=\"Select\";\n      this.defectListService.getTemplates().subscribe(\n        res=>data=res,\n        err=>console.log(err),\n        ()=>{\n          this.templates=data;\n        }\n      );\n    }\n\n    updateCollection(){\n      this.updateCollectionTabView = true;\n      this.uploadTabView=false;\n      this.tableView=false;\n      this.tableKeys=[];\n      this.tableValues=[];\n      this.dropdownValue=\"Select\";\n    }\n\n    selectFile(event){\n       this.fileList = event.target.files;\n    }\n\n    uploadTemplate() {\n      let data;\n    if(this.fileList.length > 0) {\n        let file: File = this.fileList[0];\n        let formData:FormData = new FormData();\n        formData.append('uploadedFile', file, file.name);\n        this.http.post('http://'+`localhost:8085/KanbanDashboard/manageTemplate/readTempHeader`, formData,this.templateName)\n            .map((res:Response) => res.json())\n            .catch(error => Observable.throw(error))\n            .subscribe(\n              res=>data=res,\n              err=>console.log(err),\n              ()=>{\n                this.uploadedTemplateColumns=data;\n                this.getReferenceTempColumns();\n                console.log(JSON.stringify(this.uploadedTemplateColumns))\n              }\n            );\n    \n    }\n  }\n   \n  getDefectListActual(date){\n    let data;\n    this.defectListService.getDefectListActual(this.formattedDate)\n      .finally(() => {\n          if(this.analysis.length<=0 && this.fixed.length<=0 && this.retest.length<=0 && this.deployment.length<=0 && this.onhold.length<=0 && this.newDefects.length<=0){\n            this.showTable = false;\n          }\n          else{\n            this.showTable = true;\n          }\n    })  \n    .subscribe(\n     res => data = res,\n     err => {\n      this.analysis=[];\n      this.deployment=[];\n      this.fixed=[];\n      this.newDefects=[];\n      this.retest=[];\n      this.onhold=[];\n     },\n     () => {\n       this.analysis=[];\n       this.deployment=[];\n       this.fixed=[];\n       this.newDefects=[];\n       this.retest=[];\n       this.onhold=[];\n       this.version=data.version;\n      /* if(this.tabSelected == \"plan\" || this.tabSelected == \"\"){\n        for(let i=0;i<data.plan.length;i++){\n          if(data.plan[i].status==\"Analysis\"){\n              this.analysis.push(data.plan[i]);\n          }\n          else if(data.plan[i].status==\"Fixed\"){\n              this.fixed.push(data.plan[i]);\n          }\n          else if(data.plan[i].status==\"Retest\"){\n              this.retest.push(data.plan[i]);\n          }\n          else if(data.plan[i].status==\"Deployment\"){\n              this.deployment.push(data.plan[i]);\n          }\n          else if(data.plan[i].status==\"Onhold\"){\n              this.onhold.push(data.plan[i]);\n          }\n          else{\n              this.newDefects.push(data.plan[i]);\n          }\n        }\n      } */\n     // else{\n        for(let i=0;i<data.actual.length;i++){\n          if(data.actual[i].status==\"Analysis\"){\n              this.analysis.push(data.actual[i]);\n          }\n          else if(data.actual[i].status==\"Fixed\"){\n              this.fixed.push(data.actual[i]);\n          }\n          else if(data.actual[i].status==\"Retest\"){\n              this.retest.push(data.actual[i]);\n          }\n          else if(data.actual[i].status==\"Deployment\"){\n              this.deployment.push(data.actual[i]);\n          }\n          else if(data.actual[i].status==\"Onhold\"){\n              this.onhold.push(data.actual[i]);\n          }\n          else{\n              this.newDefects.push(data.actual[i]);\n          }\n        }\n        if(this.unfreezeClicked == true){\n          this.cookieService.set('freeze','false');\n        }\n      //} \n     }\n   );\n  }\n  dropdownChange(){\n    let data;\n    console.log(this.dropdownValue)\n    if(this.dropdownValue==\"Users\"){\n      this.defectListService.getUsers().subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n            this.tableValues=data;\n            this.tableKeys=Object.keys(this.tableValues[0])\n        }\n      )\n    }\n    else if(this.dropdownValue==\"Modules\"){\n      this.defectListService.getModuleList().subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n            this.tableValues=data;\n            this.tableKeys=Object.keys(this.tableValues[0])\n        }\n      )\n    }\n    else if(this.dropdownValue==\"Release Dates\"){\n      this.defectListService.getReleaseList().subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n            this.tableValues=data;\n            this.tableKeys=Object.keys(this.tableValues[0])\n        }\n      )\n    }\n  }\n  modifyRow(data){\n    this.selectedTableRow=data;\n   \n  }\n  editCollectionDetails(){\n    let data;\n    if(this.dropdownValue == \"Users\"){\n      this.defectListService.editUser(this.selectedTableRow).subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n          \n          }\n      )\n    }\n    else if(this.dropdownValue==\"Modules\"){\n      this.defectListService.editModule(this.selectedTableRow).subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n          \n          }\n      )\n    }\n    else if(this.dropdownValue==\"Release Dates\"){\n      this.defectListService.editRelease(this.selectedTableRow).subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n          \n          }\n      )\n    }\n  }\n\n  deleteCollectionDetails(){\n    let data;\n    if(this.dropdownValue == \"Users\"){\n      this.defectListService.deleteUser(this.selectedTableRow).subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n          \n          }\n      )\n    }\n    else if(this.dropdownValue==\"Modules\"){\n      this.defectListService.deleteModule(this.selectedTableRow).subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n          \n          }\n      )\n    }\n    else if(this.dropdownValue==\"Release Dates\"){\n      this.defectListService.deleteRelease(this.selectedTableRow).subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n          \n          }\n      )\n    }\n  }\n\n  getReferenceTempColumns(){\n    let data;\n    this.defectListService.getReferenceTempColumns().subscribe(\n      res=>data=res,\n      err => console.log(err),\n      () =>  {\n        this.referenceTemplateColumns = data;\n        console.log(JSON.stringify(this.referenceTemplateColumns))   \n        this.checkArraySize();  \n      }\n    );\n  }\n\n  checkArraySize(){\n    if(this.referenceTemplateColumns.length>this.uploadedTemplateColumns.length){\n      for(var i=this.uploadedTemplateColumns.length;i<this.referenceTemplateColumns.length;i++){\n        this.uploadedTemplateColumns.push({\"headerName\":\"empty\"});\n      }\n    }\n    //this.uploadMappedColumns();\n    this.showMappingTable=true;\n  }\n\n  uploadMappedColumns(){\n    //console.log(JSON.stringify(this.uploadedTemplateColumns));\n    for(var i= 0;i<this.uploadedTemplateColumns.length;i++){\n      if(this.uploadedTemplateColumns[i].headerName!=\"empty\"){\n        this.mappedColumns.push({\"referenceColumn\":this.referenceTemplateColumns[i].columnName,\"mappingColumn\":this.uploadedTemplateColumns[i].headerName})  \n      }\n    }\n    console.log(JSON.stringify(this.mappedColumns));\n    let data;\n    let request = {\n      templateName : this.templateName,\n      mappingColumns : this.mappedColumns\n    }\n    this.defectListService.mappingFields(request).subscribe(\n      res=>data=res,\n      err => console.log(err),\n      () =>  {\n        this.referenceTemplateColumns = data;\n        console.log(JSON.stringify(this.referenceTemplateColumns))   \n        this.checkArraySize();  \n      }\n    );\n  }\n\n  uploadDefects() {\n    if(this.fileList.length > 0) {\n        let file: File = this.fileList[0];\n        let formData:FormData = new FormData();\n        formData.append('uploadedFile', file, file.name);\n        formData.append('templateName', this.dropdownValue);\n        this.http.post('http://'+`localhost:8085/KanbanDashboard/dumpIngestion/ingest`, formData,this.dropdownValue)\n            .map(res => res.json())\n            .catch(error => Observable.throw(error))\n            .subscribe(\n                data => console.log('success'),\n                error => {\n                  this.upload = false;\n                },\n                () =>  {\n                  this.upload = true; \n                }\n            )\n    \n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Kanban-Dashboard/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PlanComponent } from './plan/plan.component';\nimport { StatusComponent } from './status/status.component';\nimport { MyDatePickerModule } from 'mydatepicker';\nimport { FormsModule } from '@angular/forms';\nimport {DragulaModule} from 'ng2-dragula';\nimport { DefectlistService } from './defectlist.service';\nimport { Angular2FontawesomeModule } from 'angular2-fontawesome/angular2-fontawesome';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n\n/*const appRoutes: Routes = [\n  { path: '',redirectTo:'plan',pathMatch:'full' },\n  { path: 'status', component: StatusComponent },\n  { path: 'plan', component: PlanComponent }\n];*/\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlanComponent,\n    StatusComponent\n  ],\n  imports: [\n    BrowserModule,\n    //RouterModule.forRoot(appRoutes),\n    NgbModule.forRoot(),\n    MyDatePickerModule,\n    FormsModule,\n    DragulaModule,\n    HttpModule,\n    Angular2FontawesomeModule,\n    BrowserAnimationsModule\n  ],\n  providers: [DefectlistService,CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Kanban-Dashboard/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport {Http,Response,Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\n@Injectable()\nexport class DefectlistService {\n  public date:any;\n  constructor(private http:Http) { }\n \n\n  getDefectListPlan(request):Observable<string>{\n   // let data=JSON.stringify(request);\n  // let data = \"11-07-2017\";\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/dashBoard/getBucketMappingPlanData`\n                            ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                            Observable.throw(error.json().error || 'Server error'));\n  }\n\n  getDefectListActual(request):Observable<string>{\n     let headers = new Headers({ 'Content-Type': 'application/json' });\n     let options = new RequestOptions({ headers: headers });\n           return this.http.post('http://'+`localhost:8085/KanbanDashboard/dashBoard/getBucketMappingData`\n                             ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                             Observable.throw(error.json().error || 'Server error'));\n   }\n\n  insertPlanMapping(request):Observable<number>{\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/dashBoard/insertPlanMapping`\n                            ,request,options).map((res:Response) => res.text()).catch((error:any) =>\n                            Observable.throw(error.text().error || 'Server error'));\n  }\n\n\n  getUsersList(): Observable < string[] > {\n    return this.http.get('http://'+`localhost:8085/KanbanDashboard/generic/getUsersList`)\n      .map((res: Response) => res.json())\n      .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\n\n  getModuleList(): Observable < string[] > {\n    return this.http.get('http://'+`localhost:8085/KanbanDashboard/generic/getModuleList`)\n      .map((res: Response) => res.json())\n      .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\n\n  getReleaseList(): Observable < string[] > {\n    return this.http.get('http://'+`localhost:8085/KanbanDashboard/generic/getReleaseList`)\n      .map((res: Response) => res.json())\n      .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\n  getAQIData(): Observable < string[] > {\n    return this.http.get('http://'+`localhost:8085/KanbanDashboard/generic/getAQI`)\n      .map((res: Response) => res.json())\n      .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\n  getReleaseListDefects(): Observable < string[] > {\n    return this.http.get('http://'+`localhost:8085/KanbanDashboard/generic/getReleaseDefects`)\n      .map((res: Response) => res.json())\n      .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\n  updateActual(request): Observable < string[] > {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/dashBoard/updateActualMapping`\n                            ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                            Observable.throw(error.json().error || 'Server error'));\n  }\n\n  getDefectsTable(request): Observable < string[] > {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/generic/getDefectDetails`\n                            ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                            Observable.throw(error.json().error || 'Server error'));\n  }\n\n  getClosedDefectsData(request): Observable < string[] > {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/generic/getClosedAndCancelledDefects`\n                            ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                            Observable.throw(error.json().error || 'Server error'));\n  }\n\n  getUsers(): Observable < string[] > {\n    return this.http.get('http://'+`localhost:8085/KanbanDashboard/manageCollection/getUsersList`)\n      .map((res: Response) => res.json())\n      .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\n  editUser(request): Observable < string[] > {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/manageCollection/editUser`\n                            ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                            Observable.throw(error.json().error || 'Server error'));\n  }\n\n  editModule(request): Observable < string[] > {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/manageCollection/editModule`\n                            ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                            Observable.throw(error.json().error || 'Server error'));\n  }\n\n  editRelease(request): Observable < string[] > {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/manageCollection/editRelease`\n                            ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                            Observable.throw(error.json().error || 'Server error'));\n  }\n\n  deleteUser(request): Observable < string[] > {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/manageCollection/deleteUser`\n                            ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                            Observable.throw(error.json().error || 'Server error'));\n  }\n\n  deleteModule(request): Observable < string[] > {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/manageCollection/deleteModule`\n                            ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                            Observable.throw(error.json().error || 'Server error'));\n  }\n\n  deleteRelease(request): Observable < string[] > {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/manageCollection/deleteRelease`\n                            ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                            Observable.throw(error.json().error || 'Server error'));\n  }\n\n  getTemplates(): Observable < string[] > {\n    return this.http.get('http://'+`localhost:8085/KanbanDashboard/manageTemplate/getTemplateList`)\n      .map((res: Response) => res.json())\n      .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\n  getReferenceTempColumns(): Observable < string[] > {\n    return this.http.get('http://'+`localhost:8085/KanbanDashboard/manageTemplate/getReferenceTempColumns`)\n      .map((res: Response) => res.json())\n      .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\n  mappingFields(request): Observable < string[] > {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n          return this.http.post('http://'+`localhost:8085/KanbanDashboard/manageTemplate/mappingFields`\n                            ,request,options).map((res:Response) => res.json()).catch((error:any) =>\n                            Observable.throw(error.json().error || 'Server error'));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Kanban-Dashboard/src/app/defectlist.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card{\\r\\n    width: 9rem;\\r\\n}\\r\\n.card-body,.panel-default{\\r\\n    padding: 5px;\\r\\n}\\r\\n.yellowgreen{\\r\\n    background-color: yellowgreen !important;\\r\\n}\\r\\n.skyblue{\\r\\n    background-color: skyblue !important;\\r\\n}\\r\\n.tan{\\r\\n    background-color: tan !important;\\r\\n}\\r\\n.darkkhaki{\\r\\n    background-color: darkkhaki !important;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Kanban-Dashboard/src/app/plan/plan.component.css\n// module id = ../../../../../src/app/plan/plan.component.css\n// module chunks = 2","module.exports = \"\\n\\n<div class=\\\"col-sm-3\\\" style=\\\"float:right;margin-bottom:50px;\\\"> \\n    <form #myForm=\\\"ngForm\\\" novalidate>\\n      <my-date-picker name=\\\"mydate\\\" [options]=\\\"myDatePickerOptions\\\"\\n                       (dateChanged)=\\\"onDateChangedPlan($event)\\\" [selDate]=\\\"selDate\\\" required ></my-date-picker>\\n    </form>\\n  </div>\\n\\n  <div style=\\\"margin-bottom: 50px\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"freezePlan()\\\">Freeze Plan</button>\\n  </div>\\n <table class=\\\"table table-dark\\\">\\n      <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Defects</th>\\n            <th scope=\\\"col\\\">Analysis</th>\\n            <th scope=\\\"col\\\">Fixed</th>\\n            <th scope=\\\"col\\\">Retest</th>\\n            <th scope=\\\"col\\\">Deployment</th>\\n            <th scope=\\\"col\\\">Onhold</th>\\n          </tr>\\n        </thead>\\n    <tbody>\\n      <tr>\\n        <td [dragula]='\\\"first-bag\\\"' [dragulaModel]='newDefects'>\\n          <div *ngFor = \\\"let item of newDefects\\\" class=\\\"panel panel-default\\\"> \\n               \\n                <div class=\\\"card\\\" [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='IE'}\\\">\\n\\n                    <div class=\\\"card-body\\\">\\n                      <div class=\\\"card-title\\\">\\n                        <b>{{item.defectId}}</b>\\n                        <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                        <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                        <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                       <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                        \\n                    </div>\\n                      <div>\\n                        <span class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                        <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                        <span class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n                \\n                      </div>\\n                     \\n                    </div>\\n                  \\n              </div>\\n          </div>\\n        </td>\\n        \\n        <td  [dragula]='\\\"first-bag\\\"' [dragulaModel]='analysis'>\\n          <div *ngFor = \\\"let item of analysis\\\" style=\\\"padding:5px;\\\">\\n            <div class=\\\"card\\\" [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='IE'}\\\">\\n             \\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"card-title\\\">\\n                    <b>{{item.defectId}}</b>\\n                    <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                  <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                  \\n              </div>\\n                <div>\\n                  <span class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                  <span class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n          \\n                </div>\\n               \\n              </div>\\n            \\n        </div>\\n          </div>\\n        </td>\\n        <td  [dragula]='\\\"first-bag\\\"' [dragulaModel]='fixed'>\\n          <div *ngFor = \\\"let item of fixed\\\" style=\\\"padding:5px;\\\">\\n            <div class=\\\"card\\\" [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='IE'}\\\">\\n             \\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"card-title\\\">\\n                    <b>{{item.defectId}}</b>\\n                    <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                  <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                  \\n              </div>\\n                <div>\\n                  <span class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                  <span class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n          \\n                </div>\\n               \\n              </div>\\n            \\n        </div>\\n          </div>\\n        </td>\\n        <td  [dragula]='\\\"first-bag\\\"' [dragulaModel]='retest'>\\n          <div *ngFor = \\\"let item of retest\\\" style=\\\"padding:5px;\\\">\\n            <div class=\\\"card\\\" [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='IE'}\\\">\\n             \\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"card-title\\\">\\n                    <b>{{item.defectId}}</b>\\n                    <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                  <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                  \\n              </div>\\n                <div>\\n                  <span class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                  <span class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n          \\n                </div>\\n               \\n              </div>\\n            \\n        </div>\\n          </div>\\n        </td>\\n        <td  [dragula]='\\\"first-bag\\\"' [dragulaModel]='deployment'>\\n          <div *ngFor = \\\"let item of deployment\\\"  style=\\\"padding:5px;\\\">\\n            <div class=\\\"card\\\" [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='IE'}\\\">\\n             \\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"card-title\\\">\\n                    <b>{{item.defectId}}</b>\\n                    <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                  <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                  \\n              </div>\\n                <div>\\n                  <span class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                  <span class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n          \\n                </div>\\n               \\n              </div>\\n            \\n        </div>\\n          </div>\\n        </td>\\n        <td  [dragula]='\\\"first-bag\\\"' [dragulaModel]='onhold'>\\n          <div *ngFor = \\\"let item of onhold\\\"  style=\\\"padding:5px;\\\">\\n            <div class=\\\"card\\\" [ngClass]=\\\"{'yellowgreen': item.defectType=='PD','skyblue':item.defectType=='I','tan':item.defectType=='WD','darkkhaki':item.defectType=='IE'}\\\">\\n            \\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"card-title\\\">\\n                    <b>{{item.defectId}}</b>\\n                    <i *ngIf=\\\"item.progress=='Not started'\\\" class=\\\"fa fa-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i *ngIf=\\\"item.progress=='In progress'\\\" class=\\\"fa fa-hourglass-start\\\" aria-hidden=\\\"true\\\"></i>\\n                    <i *ngIf=\\\"item.progress=='Completed'\\\" class=\\\"fa fa-check-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                  <a data-toggle=\\\"modal\\\" href=\\\"#\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"edit(item)\\\"></i></a>\\n                  \\n              </div>\\n                <div>\\n                  <span class=\\\"badge badge-primary\\\">{{item.module}}</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 1'\\\" class=\\\"badge badge-primary\\\">S1</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 2'\\\" class=\\\"badge badge-primary\\\">S2</span>\\n                  <span *ngIf=\\\"item.severity=='Severity 3'\\\" class=\\\"badge badge-primary\\\">S3</span>\\n                  <span class=\\\"badge badge-primary\\\">{{item.workedBy}}</span>\\n          \\n                </div>\\n               \\n              </div>\\n            \\n        </div>\\n          </div>\\n        </td>     \\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  \\n  <!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">{{clickedDefect.defectId}}</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n          <div>{{clickedDefect.description}}</div>\\n        <form #editForm=\\\"ngForm\\\">\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"exampleSelect1\\\" class=\\\"col-2 col-form-label\\\">Module</label>\\n            <div class=\\\"col-10\\\">\\n              <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"module\\\" [(ngModel)]=\\\"clickedDefect.module\\\">\\n               <!-- <option>{{clickedDefect.module}}</option> -->\\n                <option *ngFor = \\\"let item of modulesList\\\">{{item.alias}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Severity</label>\\n            <div class=\\\"col-10\\\">\\n              <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"severity\\\" [(ngModel)]=\\\"clickedDefect.severity\\\">\\n                 <!-- <option>{{clickedDefect.severity}}</option> -->\\n                  <option>Severity 1</option>\\n                  <option>Severity 2</option>\\n                  <option>Severity 3</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n              <label for=\\\"exampleSelect1\\\" class=\\\"col-2 col-form-label\\\">Worked By</label>\\n              <div class=\\\"col-10\\\">\\n                <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"workedBy\\\" [(ngModel)]=\\\"clickedDefect.workedBy\\\">\\n                  <option>{{clickedDefect.workedBy}}</option>\\n                  <option *ngFor = \\\"let item of userList\\\">{{item}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"exampleSelect1\\\" class=\\\"col-2 col-form-label\\\">ETA</label>\\n                <div class=\\\"col-10\\\">\\n                  <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"eta\\\" [(ngModel)]=\\\"clickedDefect.eta\\\">\\n                   <!-- <option>{{clickedDefect.eta}}</option> -->\\n                    <option *ngFor = \\\"let item of releaseList\\\">{{item}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                  <label for=\\\"exampleSelect1\\\" class=\\\"col-2 col-form-label\\\">Progress</label>\\n                  <div class=\\\"col-10\\\">\\n                    <select class=\\\"form-control\\\" id=\\\"exampleSelect1\\\" name=\\\"progress\\\" [(ngModel)]=\\\"clickedDefect.progress\\\">\\n                      <option>{{clickedDefect.progress}}</option>\\n                      <option>Not started</option>\\n                      <option>In progress</option>\\n                      <option>Completed</option>                   \\n                    </select>\\n                  </div>\\n                </div>\\n          <div class=\\\"form-group row\\\">\\n              <label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Complexity</label>\\n              <div class=\\\"col-10\\\">\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"example-text-input\\\" name=\\\"complexity\\\" [(ngModel)]=\\\"clickedDefect.complexity\\\">\\n              </div>\\n            </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"update(editForm.value)\\\">update</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Kanban-Dashboard/src/app/plan/plan.component.html\n// module id = ../../../../../src/app/plan/plan.component.html\n// module chunks = 2","import { Component, OnInit } from '@angular/core';\nimport { DefectlistService } from '../defectlist.service';\nimport {IMyDpOptions, IMyDateModel, IMyDate} from 'mydatepicker';\nimport { DragulaService } from 'ng2-dragula';\n\n@Component({\n  selector: 'app-plan',\n  templateUrl: './plan.component.html',\n  styleUrls: ['./plan.component.css']\n})\nexport class PlanComponent implements OnInit {\n  \n private newDefects:Array<any> = [];\n private analysis:Array<any> = [];\n private fixed:Array<any> = [];\n private retest:Array<any> = [];\n private deployment:Array<any> = [];\n private onhold:Array<any> = [];\n private formattedDate:string = \"\";\n private clickedDefect:any = {};\n private modulesList:Array<any> = [];\n private selDate: IMyDate = {year: 0, month: 0, day: 0};\n private userList:Array<any> = [];\n private releaseList:Array<any> = [];\n \n  constructor(private defectListService:DefectlistService , private dragulaService: DragulaService){\n    let d: Date = new Date();\n    this.selDate = {year: d.getFullYear(), month: d.getMonth()+1, day: d.getDate()};\n\n    this.dragulaService.drop.subscribe((value) => {\n      //console.log(`drop: ${value[0]}`);\n        for(let i = 0;i<this.analysis.length;i++){\n          if(this.analysis[i].status != \"analysis\"){\n            console.log(JSON.stringify(this.analysis))\n            this.analysis[i].status = \"analysis\";\n            console.log(JSON.stringify(this.analysis))\n            break;\n          }\n        }\n\n        for(let i = 0;i<this.fixed.length;i++){\n          if(this.fixed[i].status != \"fixed\"){\n            this.fixed[i].status = \"fixed\";\n            break;\n          }\n        }\n    \n        for(let i = 0;i<this.retest.length;i++){\n          if(this.retest[i].status != \"retest\"){\n            this.retest[i].status = \"retest\";\n            break;\n          }\n        }\n    \n        for(let i = 0;i<this.deployment.length;i++){\n          if(this.deployment[i].status != \"deployment\"){\n            this.deployment[i].status = \"deployment\";\n            break;\n          }\n        }\n    \n        for(let i = 0;i<this.onhold.length;i++){\n          if(this.onhold[i].status != \"onhold\"){\n            this.onhold[i].status = \"onhold\";\n            break;\n          }\n        }\n    \n        for(let i = 0;i<this.newDefects.length;i++){\n          if(this.newDefects[i].status != \"\"){\n            this.newDefects[i].status = \"\";\n            break;\n          }\n        }\n    });\n  }\n\n  ngOnInit() {\n    this.dateFormatter(this.selDate);\n    this.getDefectList(this.formattedDate);\n    this.getUsersList();\n    this.getModulesList();\n    this.getReleaseList();\n   }\n\n   onDateChangedPlan(event: IMyDateModel) {\n     this.dateFormatter(event.date);\n     this.getDefectList(this.formattedDate);\n   }\n\n   getDefectList(date){ \n    //this.dateFormatter(date);\n     let data;\n     //console.log(this.formattedDate);\n     this.defectListService.getDefectListPlan(this.formattedDate).subscribe(\n      res => data = res,\n      err => console.log(err),\n      () => {\n        this.analysis=[];\n        this.deployment=[];\n        this.fixed=[];\n        this.newDefects=[];\n        this.retest=[];\n        this.onhold=[];\n        for(let i =0;i<data.plan.length;i++){\n          if(data.plan[i].status==\"analysis\"){\n              this.analysis.push(data.plan[i]);\n          }\n          else if(data.plan[i].status==\"fixed\"){\n              this.fixed.push(data.plan[i]);\n          }\n          else if(data.plan[i].status==\"retest\"){\n              this.retest.push(data.plan[i]);\n          }\n          else if(data.plan[i].status==\"deployment\"){\n              this.deployment.push(data.plan[i]);\n          }\n          else if(data.plan[i].status==\"onhold\"){\n              this.onhold.push(data.plan[i]);\n          }\n          else{\n              this.newDefects.push(data.plan[i]);\n          }\n        }\n      }\n    );\n   }\n\n   getUsersList(){\n     let data;\n      this.defectListService.getUsersList().subscribe(\n        res => data = res,\n        err => console.log(err),\n        () => {\n          for(let i=0;i<data.length;i++){\n            this.userList.push(data[i].attid);\n          }\n        }\n      )\n   }\n\n   getModulesList(){\n    let data;\n     this.defectListService.getModuleList().subscribe(\n       res => data = res,\n       err => console.log(err),\n       () => {\n         for(let i=0;i<data.length;i++){\n          let obj : any= {};          \n           obj.module=data[i].module;\n           obj.alias=data[i].alias;\n           this.modulesList.push(obj);\n         }\n       }\n     )\n  }\n\n  getReleaseList(){\n    let data;\n     this.defectListService.getReleaseList().subscribe(\n       res => data = res,\n       err => console.log(err),\n       () => {\n         for(let i=0;i<data.length;i++){\n           this.releaseList.push(data[i].key);\n         }\n         console.log(JSON.stringify(this.releaseList));\n       }\n     )\n  }\n\n   dateFormatter(date){\n     let day = date.day;\n     let month=date.month;\n     if(date.day < 10 ){\n       day = \"0\"+date.day;\n     }\n     if(date.month < 10){\n       month = \"0\"+date.month;\n     }\n     this.formattedDate = month+\"-\"+day+\"-\"+date.year;\n   }\n\n   edit(defectObj){\n     this.clickedDefect = defectObj;\n   }\n   update(values){\n     if(this.clickedDefect.Status == \"analysis\"){\n        this.updateArray(this.analysis,values);\n     }\n     else if(this.clickedDefect.Status == \"fixed\"){\n        this.updateArray(this.fixed,values);\n     }\n     else if(this.clickedDefect.Status == \"retest\"){\n        this.updateArray(this.retest,values);\n     }\n     else if(this.clickedDefect.Status == \"deployment\"){\n        this.updateArray(this.deployment,values);\n     }\n     else if(this.clickedDefect.Status == \"onhold\"){\n        this.updateArray(this.onhold,values);\n     }\n     else{\n        this.updateArray(this.newDefects,values);\n     }\n   }\n   updateArray(array,values){\n    console.log(JSON.stringify(values));\n    for(let i =0;i<array.length;i++){\n      if(array[i].defectId == this.clickedDefect.defectId){\n        array[i].module=values.module;\n        array[i].severity=values.severity;\n        array[i].workedBy=values.workedBy;\n        array[i].eta=values.eta;\n        array[i].progress=values.progress;\n        array[i].complexity=values.complexity;\n      }\n    }\n   }\n   freezePlan(){\n    /*for(let i = 0;i<this.analysis.length;i++){\n      if(this.analysis[i].status != \"analysis\"){\n        this.analysis[i].status = \"analysis\";\n      }\n    }\n\n    for(let i = 0;i<this.fixed.length;i++){\n      if(this.fixed[i].status != \"fixed\"){\n        this.fixed[i].status = \"fixed\";\n      }\n    }\n\n    for(let i = 0;i<this.retest.length;i++){\n      if(this.retest[i].status != \"retest\"){\n        this.retest[i].status = \"retest\";\n      }\n    }\n\n    for(let i = 0;i<this.deployment.length;i++){\n      if(this.deployment[i].status != \"deployment\"){\n        this.deployment[i].status = \"deployment\";\n      }\n    }\n\n    for(let i = 0;i<this.onhold.length;i++){\n      if(this.onhold[i].status != \"onhold\"){\n        this.onhold[i].status = \"onhold\";\n      }\n    }\n\n    for(let i = 0;i<this.newDefects.length;i++){\n      if(this.newDefects[i].status != \"\"){\n        this.newDefects[i].status = \"\";\n      }\n    }*/\n    let plan:Array<any> = [];\n    plan = Array.prototype.concat(this.newDefects, this.analysis, this.fixed, this.retest, this.deployment, this.onhold)\n    console.log(JSON.stringify(plan));\n    this.dateFormatter(this.selDate);\n    \n    let request = {\n      date : this.formattedDate,\n      plan : plan,\n      actual : plan\n    };\n    //this.defectListService.updateDefectPlan(request);\n    let data;\n    this.defectListService.insertPlanMapping(request).subscribe(\n      res => data = res,\n      err => console.log(err),\n      () => {\n        //this.getDefectList(this.formattedDate);\n      }\n    );\n    this.getDefectList(this.formattedDate);\n   }\n   \n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Kanban-Dashboard/src/app/plan/plan.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Kanban-Dashboard/src/app/status/status.component.css\n// module id = ../../../../../src/app/status/status.component.css\n// module chunks = 2","module.exports = \"<div class=\\\"col-sm-3\\\"> \\n  <form #myForm=\\\"ngForm\\\" novalidate>\\n    <my-date-picker name=\\\"mydate\\\" [options]=\\\"myDatePickerOptions\\\"\\n                     (dateChanged)=\\\"onDateChangedStatus($event)\\\" [selDate]=\\\"selDate\\\" required ></my-date-picker>\\n  </form>\\n</div>\\n\\n<table class=\\\"table table-dark\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">#</th>\\n        <th scope=\\\"col\\\">First Name</th>\\n        <th scope=\\\"col\\\">Last Name</th>\\n        <th scope=\\\"col\\\">Username</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr>\\n        <th scope=\\\"row\\\">1</th>\\n        <td>Mark</td>\\n        <td>Otto</td>\\n        <td>@mdo</td>\\n      </tr>\\n      <tr>\\n        <th scope=\\\"row\\\">2</th>\\n        <td>Jacob</td>\\n        <td>Thornton</td>\\n        <td>@fat</td>\\n      </tr>\\n      <tr>\\n        <th scope=\\\"row\\\">3</th>\\n        <td>Larry</td>\\n        <td>the Bird</td>\\n        <td>@twitter</td>\\n      </tr>\\n    </tbody>\\n  </table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Kanban-Dashboard/src/app/status/status.component.html\n// module id = ../../../../../src/app/status/status.component.html\n// module chunks = 2","import { Component, OnInit } from '@angular/core';\nimport {IMyDpOptions, IMyDateModel, IMyDate} from 'mydatepicker';\nimport { DefectlistService } from '../defectlist.service';\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.css']\n})\nexport class StatusComponent implements OnInit {\n\n  private selDate: IMyDate = {year: 0, month: 0, day: 0};\n   constructor(private defectListService:DefectlistService){\n  let d: Date = new Date();\n  this.selDate = {year: d.getFullYear(), \n                  month: d.getMonth()+1, \n                  day: d.getDate()};\n  }\n\n  ngOnInit() {\n  }\n\n  onDateChangedStatus(event: IMyDateModel) {\n    /*   let data;\n       this.defectListService.getDefectList(this.selDate).subscribe(\n         res => data = res,\n         err => console.log(err),\n         () => {\n   \n         }\n       );*/\n       console.log(\"from satus\");\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Kanban-Dashboard/src/app/status/status.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Kanban-Dashboard/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Kanban-Dashboard/src/main.ts"],"sourceRoot":"webpack:///"}